enum AuditingHttpCommunicationEvent {
    REQUEST_FULFILLED
    REQUEST_REJECTED
    RESPONSE_FULFILLED
    RESPONSE_REJECTED
}


type AuditingHttpCommunication
{
    id: ID!
    tags: JSON
    event: AuditingHttpCommunicationEvent!
    status: GraphQLInt
    method: GraphQLString!
    url: GraphQLString!
    httpRequest: JSON
    httpRequestRejected: JSON
    httpResponse: JSON
    httpResponseRejected: JSON
    isReprocessing: GraphQLBoolean!
    reprocessingHttpCommunicationId: ID
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input AuditingCreateHttpCommunicationInput
{
    id: ID!
    tags: JSON
    event: AuditingHttpCommunicationEvent!
    status: GraphQLInt
    method: GraphQLString!
    url: GraphQLString!
    httpRequest: JSON
    httpRequestRejected: JSON
    httpResponse: JSON
    httpResponseRejected: JSON
    isReprocessing: GraphQLBoolean!
    reprocessingHttpCommunicationId: ID
}

input AuditingUpdateHttpCommunicationByIdInput
{
    id: ID!
    tags: JSON
    event: AuditingHttpCommunicationEvent
    status: GraphQLInt
    method: GraphQLString
    url: GraphQLString
    httpRequest: JSON
    httpRequestRejected: JSON
    httpResponse: JSON
    httpResponseRejected: JSON
    isReprocessing: GraphQLBoolean
    reprocessingHttpCommunicationId: ID
}

input AuditingUpdateHttpCommunicationsInput
{
    id: ID
    tags: JSON
    event: AuditingHttpCommunicationEvent
    status: GraphQLInt
    method: GraphQLString
    url: GraphQLString
    httpRequest: JSON
    httpRequestRejected: JSON
    httpResponse: JSON
    httpResponseRejected: JSON
    isReprocessing: GraphQLBoolean
    reprocessingHttpCommunicationId: ID
}

type Query
{
    auditingFindHttpCommunication(
        query: QueryStatement
        constraint: QueryStatement
    ): AuditingHttpCommunication

    auditingFindHttpCommunicationById(
        id: ID
        constraint: QueryStatement
    ): AuditingHttpCommunication

    auditingGetHttpCommunications(
        query: QueryStatement
        constraint: QueryStatement
    ): [AuditingHttpCommunication]!

    auditingPaginateHttpCommunications(
        query: QueryStatement
        constraint: QueryStatement
    ): Pagination!

}

type Mutation
{
    auditingCreateHttpCommunication(
        payload: AuditingCreateHttpCommunicationInput!
    ): AuditingHttpCommunication

    auditingCreateHttpCommunications(
        payload: [AuditingCreateHttpCommunicationInput]!
    ): Boolean!

    auditingUpdateHttpCommunicationById(
        payload: AuditingUpdateHttpCommunicationByIdInput!
        constraint: QueryStatement
    ): AuditingHttpCommunication

    auditingUpdateHttpCommunications(
        payload: AuditingUpdateHttpCommunicationsInput!
        query: QueryStatement
        constraint: QueryStatement
    ): [AuditingHttpCommunication]!

    auditingUpsertHttpCommunication(
        payload: AuditingUpdateHttpCommunicationByIdInput!
    ): AuditingHttpCommunication

    auditingDeleteHttpCommunicationById(
        id: ID!
        constraint: QueryStatement
    ): AuditingHttpCommunication

    auditingDeleteHttpCommunications(
        query: QueryStatement
        constraint: QueryStatement
    ): [AuditingHttpCommunication]!

}
