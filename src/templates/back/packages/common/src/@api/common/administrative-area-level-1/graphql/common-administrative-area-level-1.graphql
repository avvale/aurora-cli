enum CommonAdministrativeAreaLevel1MapType {
    ROADMAP
    SATELLITE
    HYBRID
    TERRAIN
}


type CommonAdministrativeAreaLevel1
{
    id: ID!
    countryId: ID!
    country: CommonCountry
    code: GraphQLString!
    customCode: GraphQLString
    name: GraphQLString!
    slug: GraphQLString!
    latitude: GraphQLFloat
    longitude: GraphQLFloat
    zoom: GraphQLInt
    mapType: CommonAdministrativeAreaLevel1MapType
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input CommonCreateAdministrativeAreaLevel1Input
{
    id: ID!
    countryId: ID!
    code: GraphQLString!
    customCode: GraphQLString
    name: GraphQLString!
    slug: GraphQLString!
    latitude: GraphQLFloat
    longitude: GraphQLFloat
    zoom: GraphQLInt
    mapType: CommonAdministrativeAreaLevel1MapType
}

input CommonUpdateAdministrativeAreaLevel1ByIdInput
{
    id: ID!
    countryId: ID
    code: GraphQLString
    customCode: GraphQLString
    name: GraphQLString
    slug: GraphQLString
    latitude: GraphQLFloat
    longitude: GraphQLFloat
    zoom: GraphQLInt
    mapType: CommonAdministrativeAreaLevel1MapType
}

input CommonUpdateAdministrativeAreasLevel1Input
{
    id: ID
    countryId: ID
    code: GraphQLString
    customCode: GraphQLString
    name: GraphQLString
    slug: GraphQLString
    latitude: GraphQLFloat
    longitude: GraphQLFloat
    zoom: GraphQLInt
    mapType: CommonAdministrativeAreaLevel1MapType
}

type Query
{
    commonFindAdministrativeAreaLevel1(
        query: QueryStatement
        constraint: QueryStatement
    ): CommonAdministrativeAreaLevel1

    commonFindAdministrativeAreaLevel1ById(
        id: ID
        constraint: QueryStatement
    ): CommonAdministrativeAreaLevel1

    commonGetAdministrativeAreasLevel1(
        query: QueryStatement
        constraint: QueryStatement
    ): [CommonAdministrativeAreaLevel1]!

    commonPaginateAdministrativeAreasLevel1(
        query: QueryStatement
        constraint: QueryStatement
    ): Pagination!

}

type Mutation
{
    commonCreateAdministrativeAreaLevel1(
        payload: CommonCreateAdministrativeAreaLevel1Input!
    ): CommonAdministrativeAreaLevel1

    commonCreateAdministrativeAreasLevel1(
        payload: [CommonCreateAdministrativeAreaLevel1Input]!
    ): Boolean!

    commonUpdateAdministrativeAreaLevel1ById(
        payload: CommonUpdateAdministrativeAreaLevel1ByIdInput!
        constraint: QueryStatement
    ): CommonAdministrativeAreaLevel1

    commonUpdateAdministrativeAreasLevel1(
        payload: CommonUpdateAdministrativeAreasLevel1Input!
        query: QueryStatement
        constraint: QueryStatement
    ): [CommonAdministrativeAreaLevel1]!

    commonUpsertAdministrativeAreaLevel1(
        payload: CommonUpdateAdministrativeAreaLevel1ByIdInput!
    ): CommonAdministrativeAreaLevel1

    commonDeleteAdministrativeAreaLevel1ById(
        id: ID!
        constraint: QueryStatement
    ): CommonAdministrativeAreaLevel1

    commonDeleteAdministrativeAreasLevel1(
        query: QueryStatement
        constraint: QueryStatement
    ): [CommonAdministrativeAreaLevel1]!

}
