enum CommonAdministrativeAreaLevel3MapType {
    ROADMAP
    SATELLITE
    HYBRID
    TERRAIN
}


type CommonAdministrativeAreaLevel3
{
    id: ID!
    countryId: ID!
    country: CommonCountry
    administrativeAreaLevel1Id: ID!
    administrativeAreaLevel1: CommonAdministrativeAreaLevel1
    administrativeAreaLevel2Id: ID!
    administrativeAreaLevel2: CommonAdministrativeAreaLevel2
    code: GraphQLString!
    customCode: GraphQLString
    name: GraphQLString!
    slug: GraphQLString!
    latitude: GraphQLFloat
    longitude: GraphQLFloat
    zoom: GraphQLInt
    mapType: CommonAdministrativeAreaLevel3MapType
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input CommonCreateAdministrativeAreaLevel3Input
{
    id: ID!
    countryId: ID!
    administrativeAreaLevel1Id: ID!
    administrativeAreaLevel2Id: ID!
    code: GraphQLString!
    customCode: GraphQLString
    name: GraphQLString!
    slug: GraphQLString!
    latitude: GraphQLFloat
    longitude: GraphQLFloat
    zoom: GraphQLInt
    mapType: CommonAdministrativeAreaLevel3MapType
}

input CommonUpdateAdministrativeAreaLevel3ByIdInput
{
    id: ID!
    countryId: ID
    administrativeAreaLevel1Id: ID
    administrativeAreaLevel2Id: ID
    code: GraphQLString
    customCode: GraphQLString
    name: GraphQLString
    slug: GraphQLString
    latitude: GraphQLFloat
    longitude: GraphQLFloat
    zoom: GraphQLInt
    mapType: CommonAdministrativeAreaLevel3MapType
}

input CommonUpdateAdministrativeAreasLevel3Input
{
    id: ID
    countryId: ID
    administrativeAreaLevel1Id: ID
    administrativeAreaLevel2Id: ID
    code: GraphQLString
    customCode: GraphQLString
    name: GraphQLString
    slug: GraphQLString
    latitude: GraphQLFloat
    longitude: GraphQLFloat
    zoom: GraphQLInt
    mapType: CommonAdministrativeAreaLevel3MapType
}

type Query
{
    commonFindAdministrativeAreaLevel3(
        query: QueryStatement
        constraint: QueryStatement
    ): CommonAdministrativeAreaLevel3

    commonFindAdministrativeAreaLevel3ById(
        id: ID
        constraint: QueryStatement
    ): CommonAdministrativeAreaLevel3

    commonGetAdministrativeAreasLevel3(
        query: QueryStatement
        constraint: QueryStatement
    ): [CommonAdministrativeAreaLevel3]!

    commonPaginateAdministrativeAreasLevel3(
        query: QueryStatement
        constraint: QueryStatement
    ): Pagination!

}

type Mutation
{
    commonCreateAdministrativeAreaLevel3(
        payload: CommonCreateAdministrativeAreaLevel3Input!
    ): CommonAdministrativeAreaLevel3

    commonCreateAdministrativeAreasLevel3(
        payload: [CommonCreateAdministrativeAreaLevel3Input]!
    ): Boolean!

    commonUpdateAdministrativeAreaLevel3ById(
        payload: CommonUpdateAdministrativeAreaLevel3ByIdInput!
        constraint: QueryStatement
    ): CommonAdministrativeAreaLevel3

    commonUpdateAdministrativeAreasLevel3(
        payload: CommonUpdateAdministrativeAreasLevel3Input!
        query: QueryStatement
        constraint: QueryStatement
    ): [CommonAdministrativeAreaLevel3]!

    commonUpsertAdministrativeAreaLevel3(
        payload: CommonUpdateAdministrativeAreaLevel3ByIdInput!
    ): CommonAdministrativeAreaLevel3

    commonDeleteAdministrativeAreaLevel3ById(
        id: ID!
        constraint: QueryStatement
    ): CommonAdministrativeAreaLevel3

    commonDeleteAdministrativeAreasLevel3(
        query: QueryStatement
        constraint: QueryStatement
    ): [CommonAdministrativeAreaLevel3]!

}
