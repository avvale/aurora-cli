{{
    setVar 'importsArray' (
        array
            (object items=(array 'AggregateRoot') path='@nestjs/cqrs')
            (object items='CQMetadata' path=config.auroraCorePackage)
            (
                object
                    items=schema.aggregateName
                    path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName))
            )
    )
~}}
{{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-created-' (toKebabCase schema.moduleName) '.event.ts'}}
{{#isAllowPath schema 'createBatch' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-created-' (toKebabCase schema.moduleNames) '.event.ts') }}
{{
    push importsArray
        (object items=(sumStrings (toPascalCase schema.boundedContextName) 'Created' (toPascalCase schema.moduleName) 'Event') path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName)))
~}}
{{/isAllowPath}}
{{/notInArray}}
{{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-created-' (toKebabCase schema.moduleName) '.event.ts'}}
{{#isAllowPath schema 'createBatch' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-created-' (toKebabCase schema.moduleNames) '.event.ts') }}
{{
    push importsArray
        (object items=(sumStrings (toPascalCase schema.boundedContextName) 'Created' (toPascalCase schema.moduleNames) 'Event') path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName)))
~}}
{{/isAllowPath}}
{{/notInArray}}
{{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-updated-' (toKebabCase schema.moduleName) '.event.ts'}}
{{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-updated-' (toKebabCase schema.moduleNames) '.event.ts'}}
{{
    push importsArray
        (object items=(sumStrings (toPascalCase schema.boundedContextName) 'Updated' (toPascalCase schema.moduleName) 'Event') path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName)))
~}}
{{/notInArray}}
{{/notInArray}}
{{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-updated-' (toKebabCase schema.moduleName) '.event.ts'}}
{{#isAllowPath schema 'update' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-updated-' (toKebabCase schema.moduleNames) '.event.ts') }}
{{
    push importsArray
        (object items=(sumStrings (toPascalCase schema.boundedContextName) 'Updated' (toPascalCase schema.moduleNames) 'Event') path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName)))
~}}
{{/isAllowPath}}
{{/notInArray}}
{{#isAllowPath schema 'updateAndIncrement' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-updated-and-incremented-' (toKebabCase schema.moduleName) '.event.ts') }}
{{#isAllowPath schema 'updateAndIncrement' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-updated-and-incremented-' (toKebabCase schema.moduleNames) '.event.ts') }}
{{
    push importsArray
        (object items=(sumStrings (toPascalCase schema.boundedContextName) 'UpdatedAndIncremented' (toPascalCase schema.moduleName) 'Event') path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName)))
~}}
{{/isAllowPath}}
{{/isAllowPath}}
{{#isAllowPath schema 'updateAndIncrement' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-updated-and-incremented-' (toKebabCase schema.moduleName) '.event.ts') }}
{{#isAllowPath schema 'updateAndIncrement' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-updated-and-incremented-' (toKebabCase schema.moduleNames) '.event.ts') }}
{{
    push importsArray
        (object items=(sumStrings (toPascalCase schema.boundedContextName) 'UpdatedAndIncremented' (toPascalCase schema.moduleNames) 'Event') path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName)))
~}}
{{/isAllowPath}}
{{/isAllowPath}}
{{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-deleted-' (toKebabCase schema.moduleName) '.event.ts'}}
{{
    push importsArray
        (object items=(sumStrings (toPascalCase schema.boundedContextName) 'Deleted' (toPascalCase schema.moduleName) 'Event') path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName)))
~}}
{{/notInArray}}
{{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-deleted-' (toKebabCase schema.moduleNames) '.event.ts'}}
{{
    push importsArray
        (object items=(sumStrings (toPascalCase schema.boundedContextName) 'Deleted' (toPascalCase schema.moduleNames) 'Event') path=(sumStrings config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName)))
~}}
{{/notInArray}}
{{{ importManager (object imports=importsArray) }}}
export class {{ toPascalCase schema.boundedContextName }}Add{{ toPascalCase schema.moduleNames }}ContextEvent extends AggregateRoot
{
    constructor(
        public readonly aggregateRoots: {{ schema.aggregateName }}[] = [],
        public readonly cQMetadata?: CQMetadata,
    )
    {
        super();
    }

    *[Symbol.iterator]()
    {
        for (const aggregateRoot of this.aggregateRoots) yield aggregateRoot;
    }

    {{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-created-' (toKebabCase schema.moduleName) '.event.ts'}}
    {{#isAllowPath schema 'createBatch' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-created-' (toKebabCase schema.moduleNames) '.event.ts') }}
    created(): void
    {
        this.apply(
            new {{ toPascalCase schema.boundedContextName }}Created{{ toPascalCase schema.moduleNames }}Event({
                payload: this.aggregateRoots.map({{ toCamelCase schema.moduleName }} =>
                    new {{ toPascalCase schema.boundedContextName }}Created{{ toPascalCase schema.moduleName }}Event({
                        payload: {
                            {{#each (getAggregateProperties schema.aggregateProperties) }}
                            {{#if (isAllowProperty ../schema.moduleName this) }}
                            {{ toCamelCase (getPropertyName this) }}: {{ toCamelCase ../schema.moduleName }}.{{ toCamelCase (getPropertyName this) }}{{#if nullable}}?{{/if}}.value,
                            {{/if}}
                            {{/each}}
                        },
                    }),
                ),
                cQMetadata: this.cQMetadata,
            }),
        );
    }

    {{/isAllowPath}}
    {{/notInArray}}
    {{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-updated-' (toKebabCase schema.moduleName) '.event.ts'}}
    {{#isAllowPath schema 'update' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-updated-' (toKebabCase schema.moduleNames) '.event.ts') }}
    updated(): void
    {
        this.apply(
            new {{ toPascalCase schema.boundedContextName }}Updated{{ toPascalCase schema.moduleNames }}Event({
                payload: this.aggregateRoots.map({{ toCamelCase schema.moduleName }} =>
                    new {{ toPascalCase schema.boundedContextName }}Updated{{ toPascalCase schema.moduleName }}Event({
                        payload: {
                            {{#each (getAggregateProperties schema.aggregateProperties) }}
                            {{#if (isAllowProperty ../schema.moduleName this) }}
                            {{ toCamelCase (getPropertyName this) }}: {{ toCamelCase ../schema.moduleName }}.{{ toCamelCase (getPropertyName this) }}{{#if nullable}}?{{/if}}.value,
                            {{/if}}
                            {{/each}}
                        },
                    }),
                ),
                cQMetadata: this.cQMetadata,
            }),
        );
    }

    {{/isAllowPath}}
    {{/notInArray}}
    {{#isAllowPath schema 'updateAndIncrement' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-updated-and-incremented-' (toKebabCase schema.moduleName) '.event.ts') }}
    {{#isAllowPath schema 'updateAndIncrement' 'src' config.appContainer (toKebabCase schema.boundedContextName) (toKebabCase schema.moduleName) 'application' 'events' (sumStrings (toKebabCase schema.boundedContextName) '-updated-and-incremented-' (toKebabCase schema.moduleNames) '.event.ts') }}
    updatedAndIncremented(): void
    {
        this.apply(
            new {{ toPascalCase schema.boundedContextName }}UpdatedAndIncremented{{ toPascalCase schema.moduleNames }}Event({
                payload: this.aggregateRoots.map({{ toCamelCase schema.moduleName }} =>
                    new {{ toPascalCase schema.boundedContextName }}UpdatedAndIncremented{{ toPascalCase schema.moduleName }}Event({
                        payload: {
                            {{#each (getAggregateProperties schema.aggregateProperties) }}
                            {{#if (isAllowProperty ../schema.moduleName this) }}
                            {{ toCamelCase (getPropertyName this) }}: {{ toCamelCase ../schema.moduleName }}.{{ toCamelCase (getPropertyName this) }}{{#if nullable}}?{{/if}}.value,
                            {{/if}}
                            {{/each}}
                        },
                    }),
                ),
                cQMetadata: this.cQMetadata,
            }),
        );
    }

    {{/isAllowPath}}
    {{/isAllowPath}}
    {{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-deleted-' (toKebabCase schema.moduleName) '.event.ts'}}
    {{#notInArray schema.excludedFiles 'src/' config.appContainer '/' (toKebabCase schema.boundedContextName) '/' (toKebabCase schema.moduleName) '/application/events/' (toKebabCase schema.boundedContextName) '-deleted-' (toKebabCase schema.moduleNames) '.event.ts'}}
    deleted(): void
    {
        this.apply(
            new {{ toPascalCase schema.boundedContextName }}Deleted{{ toPascalCase schema.moduleNames }}Event({
                payload: this.aggregateRoots.map({{ toCamelCase schema.moduleName }} =>
                    new {{ toPascalCase schema.boundedContextName }}Deleted{{ toPascalCase schema.moduleName }}Event({
                        payload: {
                            {{#each (getAggregateProperties schema.aggregateProperties) }}
                            {{#if (isAllowProperty ../schema.moduleName this) }}
                            {{ toCamelCase (getPropertyName this) }}: {{ toCamelCase ../schema.moduleName }}.{{ toCamelCase (getPropertyName this) }}{{#if nullable}}?{{/if}}.value,
                            {{/if}}
                            {{/each}}
                        },
                    }),
                ),
                cQMetadata: this.cQMetadata,
            }),
        );
    }
    {{/notInArray}}
    {{/notInArray}}
}
