name: Testing, Build and Deploy Back on Plesk

on:
  push:
    branches:
      - 'environments/plesk-production'

  workflow_dispatch:

env:
  # https://www.plesk.com/kb/support/how-to-set-up-ssh-keys-for-plesk-server/
  # don't forget set like bin/bash ftp user
  # SSH private key
  SERVER_KEY: $\{{ secrets.SERVER_KEY }}
  # security phrase for SSH private key
  SERVER_KEY_PHRASE: $\{{ secrets.SERVER_KEY_PHRASE }}
  # default port SFTP 22
  SERVER_PORT: $\{{ secrets.SERVER_PORT }}
  SERVER_HOST: $\{{ secrets.SERVER_HOST }}
  # SFTP/SSH username
  SERVER_USERNAME: $\{{ secrets.SERVER_USERNAME }}
  # example /var/www/vhosts/contoso.com
  SERVER_PATH: $\{{ secrets.SERVER_PATH }}

  # Node version
  NODE_VERSION: '22'

jobs:
  tests:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: '$\{{ env.NODE_VERSION }}'

    - name: Install dependencies
      run: npm ci

    - name: Unit testing
      run: npm run test

    - name: Build project
      run: npm run build -- --configuration=production

    - name: Zip artifact for deployment
      run: cd dist/fuse/browser && zip release.zip ./* -r

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: tested-artifact
        path: |
          dist/fuse/browser/release.zip

  deploy:
    name: Rsync Plesk deploy
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: tested-artifact

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: tested-artifact

      - name: Unzip artifact for deployment
        run: unzip -o release.zip -d src

      - name: Delete zip artifact
        run: rm release.zip

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: '$\{{ env.NODE_VERSION }}'

      - name: Deploy Plesk with rsync
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzh --delete --exclude=".*"
          path: src/
          remote_path: $\{{ env.SERVER_PATH }}/httpdocs
          remote_host: $\{{ env.SERVER_HOST }}
          remote_port: $\{{ env.SERVER_PORT }}
          remote_user: $\{{ env.SERVER_USERNAME }}
          remote_key: $\{{ env.SERVER_KEY }}
          remote_key_pass: $\{{ env.SERVER_KEY_PHRASE }}