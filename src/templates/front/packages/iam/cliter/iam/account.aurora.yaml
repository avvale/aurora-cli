version: 0.0.1
boundedContextName: iam
moduleName: account
moduleNames: accounts
aggregateName: IamAccount
hasOAuth: true
hasTenant: false
hasAuditing: true
front:
  solidIcon: mat_solid:manage_accounts
  outlineIcon: mat_outline:manage_accounts
aggregateProperties:
  - name: id
    type: id
    primaryKey: true
    nullable: false
  - name: type
    type: enum
    enumOptions:
      - USER
      - SERVICE
    nullable: false
    example: IamAccountType.USER
  - name: code
    type: varchar
    maxLength: 64
    nullable: true
    index: unique
  - name: email
    type: varchar
    maxLength: 128
    nullable: true
    index: unique
    example: john@gmial.com
  - name: username
    type: varchar
    maxLength: 128
    nullable: false
    index: unique
  - name: isActive
    type: boolean
    nullable: false
    defaultValue: false
    example: true
  - name: clientId
    type: id
    nullable: false
    relationship:
      type: many-to-one
      aggregateName: OAuthClient
      modulePath: o-auth/client
      key: id
      field: client
      avoidConstraint: true
  - name: tags
    type: array
    nullable: true
    index: index
    arrayOptions:
      type: varchar
      maxLength: 64
  - name: scopes
    type: array
    nullable: true
    arrayOptions:
      type: varchar
      maxLength: 64
  - name: dApplicationCodes
    type: array
    nullable: false
    arrayOptions:
      type: varchar
  - name: dPermissions
    type: jsonb
    nullable: false
  - name: dTenants
    type: array
    nullable: false
    arrayOptions:
      type: id
  - name: meta
    type: jsonb
    nullable: true
  - name: roles
    type: relationship
    nullable: true
    relationship:
      type: many-to-many
      singularName: role
      aggregateName: IamRole
      modulePath: iam/role
      avoidConstraint: false
      pivot:
        boundedContextName: iam
        moduleName: role-account
        moduleNames: roles-accounts
        aggregateName: IamRoleAccount
        hasOAuth: true
        hasAuditing: true
        aggregateProperties:
          - name: roleId
            type: id
            primaryKey: true
            nullable: false
            relationship:
              type: many-to-one
              aggregateName: IamRole
              modulePath: iam/role
              field: role
              avoidConstraint: true
          - name: accountId
            type: id
            primaryKey: true
            nullable: false
            relationship:
              type: many-to-one
              aggregateName: IamAccount
              modulePath: iam/account
              field: account
              avoidConstraint: true
        excludedOperations:
          - count
          - max
          - min
          - sum
          - rawSql
          - updateAndIncrement
          - upsert
  - name: tenants
    type: relationship
    nullable: true
    relationship:
      type: many-to-many
      singularName: tenant
      aggregateName: IamTenant
      modulePath: iam/tenant
      avoidConstraint: false
      pivot:
        boundedContextName: iam
        moduleName: tenant-account
        moduleNames: tenants-accounts
        aggregateName: IamTenantAccount
        hasOAuth: true
        hasAuditing: true
        aggregateProperties:
          - name: tenantId
            type: id
            primaryKey: true
            nullable: false
            relationship:
              type: many-to-one
              aggregateName: IamTenant
              modulePath: iam/tenant
              field: tenant
              avoidConstraint: true
          - name: accountId
            type: id
            primaryKey: true
            nullable: false
            relationship:
              type: many-to-one
              aggregateName: IamAccount
              modulePath: iam/account
              field: account
              avoidConstraint: true
        excludedOperations:
          - count
          - max
          - min
          - sum
          - rawSql
          - updateAndIncrement
          - upsert
    webComponent:
      type: multiple-select
  - name: user
    type: relationship
    nullable: true
    relationship:
      type: one-to-one
      aggregateName: IamUser
      modulePath: iam/user
  - name: createdAt
    type: timestamp
    nullable: true
  - name: updatedAt
    type: timestamp
    nullable: true
  - name: deletedAt
    type: timestamp
    nullable: true
additionalApis:
  - path: iam/account/update-me
    resolverType: mutation
    httpMethod: post
  - path: iam/account/check-password-me
    resolverType: query
    httpMethod: post
  - path: iam/account/check-unique-username
    resolverType: query
    httpMethod: post
  - path: iam/account/check-unique-email
    resolverType: query
    httpMethod: post
  - path: iam/accounts/paginate-with-tenant-constraint
    resolverType: query
    httpMethod: post
excludedOperations:
  - count
  - max
  - min
  - sum
  - rawSql
  - updateAndIncrement
  - upsert
excludedFiles:
  - src/@api/iam/account/resolvers/iam-create-accounts.resolver.ts
  - src/@api/iam/account/resolvers/iam-create-accounts.resolver.spec.ts
  - src/@api/iam/account/controllers/iam-create-accounts.controller.ts
  - src/@api/iam/account/controllers/iam-create-accounts.controller.spec.ts
  - src/@api/iam/account/handlers/iam-create-accounts.handler.ts
  - src/@api/iam/account/handlers/iam-create-accounts.handler.spec.ts
  - src/@api/iam/account/handlers/iam-paginate-with-tenant-constraint-accounts.handler.spec.ts
  - src/@api/iam/account/handlers/iam-paginate-with-tenant-constraint-accounts.handler.ts
